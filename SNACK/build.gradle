/*
buildscript {
   dependencies {
      classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
   }
}
*/
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

//apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'com.example'
version = '0.0.1-SNACK'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	implementation 'jakarta.persistence:jakarta.persistence-api'
	
	// devtools
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	// Spring Data JPA
  	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-core:6.1.0.Final'
  
  	// MySQL Connector
  	implementation 'mysql:mysql-connector-java:8.0.30'
  	
  	// WebSocket and stomp
  	implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-messaging'
    implementation 'org.springframework:spring-messaging'
    implementation 'org.springframework:spring-websocket'
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    
    // mapper
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    
    // querydsl
    //implementation "com.querydsl:querydsl-jpa"
   	//implementation "com.querydsl:querydsl-apt"
}

tasks.named('test') {
	useJUnitPlatform()
}

/*
def querydslDir = "src/main/generated/queryDsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDirs = ['src/main/java', querydslDir]
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}
*/ 